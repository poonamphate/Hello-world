//Given a string, find the length of the longest substring without repeating characters.
//https://leetcode.com/problems/longest-substring-without-repeating-characters/solution/ - approach 2

import java.util.HashSet;

public class LongestSubString {
	public static void main(String[] args) {
		String str = "abcabcbb";
		System.out.println("length of longest substring is ="+findLongestSubstring(str));
	}
	
	static int findLongestSubstring(String str) {
		HashSet<Character> set  = new HashSet<>();
		int length = str.length();
		int i = 0, j = 0, ans = 0;
		
		while(i < length && j < length) {
			if(!set.contains(str.charAt(j))) {
				set.add(str.charAt(j++));
				ans = Math.max(ans, j-i);
			}
			
			else {
				set.remove(str.charAt(i++));
			}
		}
		
		return ans;
	}
}
