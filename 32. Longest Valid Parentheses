Solution:https://leetcode.com/problems/longest-valid-parentheses/solution/

import java.util.Stack;
public class LongestValidParenthesis {

   public static void main(String []args) {
      String str = "())((())";
      System.out.println(longestValidParen(str));
   }
   
   static int longestValidParen(String str){
       if(str.length() == 0 || str == null){
           return 0;
       }
       
       Stack<Integer> stack = new Stack<>();
       stack.push(-1);
       int longest = 0;
       
       for(int i = 0; i< str.length(); i++){
           if(str.charAt(i) == '('){
               stack.push(i);
           }
           else{
               stack.pop();
               if(stack.isEmpty()){
                   stack.push(i);
               }
               else if(str.charAt(i) == ')'){
                   longest = Math.max(longest, i-(stack.peek()));
               }
           }
       }
    return longest;  
   }
}
